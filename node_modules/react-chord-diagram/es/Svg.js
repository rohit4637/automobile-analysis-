function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import PropTypes from 'prop-types';

var Svg = function Svg(_ref) {
  var width = _ref.width,
      height = _ref.height,
      style = _ref.style,
      className = _ref.className,
      clearHover = _ref.clearHover,
      children = _ref.children,
      resizeWithWindow = _ref.resizeWithWindow,
      _onClick = _ref.onClick;
  return /*#__PURE__*/React.createElement("div", {
    className: "svg-container",
    style: _extends({}, style, !resizeWithWindow ? {
      width: width + "px",
      height: height + "px"
    } : {})
  }, /*#__PURE__*/React.createElement("svg", {
    className: "svg-content " + className,
    viewBox: "-" + width / 2 + " -" + height / 2 + " " + width + " " + height,
    preserveAspectRatio: "xMidYMid meet"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("rect", {
    fillOpacity: 0,
    height: height,
    onClick: function onClick(event) {
      clearHover();
      _onClick && _onClick(event);
    },
    width: width,
    x: "-" + width / 2,
    y: "-" + height / 2
  }), children)));
};

Svg.propTypes = process.env.NODE_ENV !== "production" ? {
  width: PropTypes.number,
  height: PropTypes.number,
  style: PropTypes.object,
  children: PropTypes.arrayOf(PropTypes.node),
  resizeWithWindow: PropTypes.bool,
  onClick: PropTypes.func
} : {};
export default Svg;