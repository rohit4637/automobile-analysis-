"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _d3Color = require("d3-color");

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Ribbons = function Ribbons(_ref) {
  var chords = _ref.chords,
      color = _ref.color,
      disableHover = _ref.disableHover,
      ribbon = _ref.ribbon,
      setMouseOverRibbon = _ref.setMouseOverRibbon,
      mouseOverGroup = _ref.mouseOverGroup,
      mouseOverRibbon = _ref.mouseOverRibbon,
      hoverPersist = _ref.hoverPersist,
      setHoverPersist = _ref.setHoverPersist,
      _onClick = _ref.onClick,
      strokeWidth = _ref.strokeWidth,
      blurOnHover = _ref.blurOnHover,
      ribbonOpacity = _ref.ribbonOpacity,
      ribbonBlurOpacity = _ref.ribbonBlurOpacity;
  return /*#__PURE__*/_react["default"].createElement("g", {
    className: "ribbons",
    fillOpacity: ribbonOpacity
  }, chords.map(function (chord, chordIndex) {
    var hidden = (0, _utils.isHiddenRibbon)(mouseOverGroup, chord.source.index, chord.target.index) || (0, _utils.isHiddenRibbon)(mouseOverRibbon, chordIndex, null);
    var style = blurOnHover ? {
      fillOpacity: "" + (hidden ? ribbonBlurOpacity : ribbonOpacity)
    } : {
      display: "" + (hidden ? 'none' : 'block'),
      fillOpacity: ribbonOpacity
    };
    return /*#__PURE__*/_react["default"].createElement("path", {
      key: chordIndex,
      style: style,
      fill: color(chord.target.index),
      stroke: "" + (0, _d3Color.rgb)(color(chord.target.index)).darker(),
      strokeWidth: strokeWidth,
      d: "" + ribbon({
        source: chord.source,
        target: chord.target
      }),
      onClick: function onClick() {
        setHoverPersist(!hoverPersist);
        _onClick && _onClick(chordIndex);
      },
      onMouseOver: !disableHover && !hoverPersist ? function () {
        return setMouseOverRibbon(chordIndex);
      } : null,
      onMouseOut: !disableHover && !hoverPersist ? function () {
        return setMouseOverRibbon(null);
      } : null
    });
  }));
};

Ribbons.propTypes = process.env.NODE_ENV !== "production" ? {
  chords: _propTypes["default"].array.isRequired,
  color: _propTypes["default"].func.isRequired,
  ribbon: _propTypes["default"].func.isRequired,
  setMouseOverRibbon: _propTypes["default"].func.isRequired,
  mouseOverGroup: _propTypes["default"].number,
  mouseOverRibbon: _propTypes["default"].number,
  onClick: _propTypes["default"].func,
  strokeWidth: _propTypes["default"].number,
  disableHover: _propTypes["default"].bool,
  blurOnHover: _propTypes["default"].bool
} : {};
var _default = Ribbons;
exports["default"] = _default;
module.exports = exports.default;