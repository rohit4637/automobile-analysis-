"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _d3Color = require("d3-color");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var getAngle = function getAngle(group) {
  return (group.startAngle + group.endAngle) / 2;
};

var Groups = function Groups(_ref) {
  var componentId = _ref.componentId,
      chords = _ref.chords,
      color = _ref.color,
      arc = _ref.arc,
      outerRadius = _ref.outerRadius,
      setMouseOverGroup = _ref.setMouseOverGroup,
      groupLabels = _ref.groupLabels,
      labelColors = _ref.labelColors,
      disableHover = _ref.disableHover,
      hoverPersist = _ref.hoverPersist,
      setHoverPersist = _ref.setHoverPersist,
      _onClick = _ref.onClick;
  return /*#__PURE__*/_react["default"].createElement("g", {
    className: "groups"
  }, chords.groups.map(function (group, groupIndex) {
    return /*#__PURE__*/_react["default"].createElement("g", {
      key: groupIndex,
      onMouseOver: !disableHover && !hoverPersist ? function () {
        return setMouseOverGroup(group.index);
      } : null,
      onMouseOut: !disableHover && !hoverPersist ? function () {
        return setMouseOverGroup(null);
      } : null,
      onClick: function onClick() {
        setHoverPersist(!hoverPersist);
        _onClick && _onClick(group.index);
      }
    }, /*#__PURE__*/_react["default"].createElement("path", {
      id: "component" + componentId + "-group" + groupIndex,
      fill: "" + color(groupIndex),
      stroke: "" + (0, _d3Color.rgb)(color(groupIndex)).darker(),
      d: arc(group)
    }), /*#__PURE__*/_react["default"].createElement("text", {
      dy: ".35em",
      transform: "rotate(" + (getAngle(group) * 180 / Math.PI - 90) + ") translate(" + (outerRadius + 10) + ") " + (getAngle(group) > Math.PI ? "rotate(180)" : ""),
      fill: labelColors.length === 1 ? labelColors[0] : labelColors[groupIndex],
      style: {
        textAnchor: (group.startAngle + group.endAngle) / 2 > Math.PI ? "end" : null
      }
    }, groupLabels[groupIndex]));
  }));
};

Groups.propTypes = process.env.NODE_ENV !== "production" ? {
  componentId: _propTypes["default"].number.isRequired,
  chords: _propTypes["default"].array.isRequired,
  color: _propTypes["default"].func.isRequired,
  arc: _propTypes["default"].func.isRequired,
  setMouseOverGroup: _propTypes["default"].func.isRequired,
  groupLabels: _propTypes["default"].array,
  labelColors: _propTypes["default"].array,
  disableHover: _propTypes["default"].bool,
  persistHoverOnClick: _propTypes["default"].bool,
  onClick: _propTypes["default"].func
} : {};
var _default = Groups;
exports["default"] = _default;
module.exports = exports.default;